ImageRuntimeVersion: v4.0.30319
Assembly PenDrawing, Version=1.0.*, Culture=不因語言而異 (不因國別而異): 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Class PenDrawing.DrawClass: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 Color_R : Public
    UInt32 Color_G : Public
    UInt32 Color_B : Public
    Int32 Reference_width : Public
    Int32 Reference_height : Public
    Byte** Reference_fp : Public
    Int32 UnSharp_Mark_width : Public
    Int32 UnSharp_Mark_height : Public
    Byte** UnSharp_Mark_fp : Public
    Int32 Brush_width : Public
    Int32 Brush_height : Public
    Byte** Brush_fp : Public
  Methods:
    Black(Byte*, Int32, Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    BlackBrush(Byte*, Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    CreateUnSharpMark(Int32, Int32): PrivateScope, Public, HideBySig
    CreateUnSharpMark(Byte*, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    CreateBrush(Int32, Int32): PrivateScope, Public, HideBySig
    FillOil(Byte*, Int32 IsConst, Int32 IsConst, Int32 IsConst, Int32 IsConst, Int32 IsConst, Int32 IsConst): PrivateScope, Public, HideBySig
    checkColorRange(Int32, Int32, Int32): PrivateScope, Public, HideBySig
    BackToRero(Byte**, vector<int\,std::allocator<int> >*, vector<int\,std::allocator<int> >*, Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    FindByVector(vector<int\,std::allocator<int> >*, vector<int\,std::allocator<int> >*, Int32, Int32): PrivateScope, Public, HideBySig
    colorOrder(Byte* IsImplicitlyDereferenced, Byte* IsImplicitlyDereferenced, Byte* IsImplicitlyDereferenced, Int32): PrivateScope, Public, Static, HideBySig
    ConvertHSV_(Byte*, Int32, Int32, Int32, Int32, Int32, Int32, Boolean(HasFieldMarshal), Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    ConvertHSV(Byte*, Int32, Int32, Int32, Int32, Int32, Int32, Boolean(HasFieldMarshal), Int32): PrivateScope, Public, HideBySig
    HSVMin(Double, Double): PrivateScope, Public, Static, HideBySig
    HSVMax(Double, Double): PrivateScope, Public, Static, HideBySig
    BGRToHSV(Int32, Int32, Int32, Byte* IsImplicitlyDereferenced, Byte* IsImplicitlyDereferenced, Byte* IsImplicitlyDereferenced, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    HSVToBGR(Double, Double, Double, Byte* IsImplicitlyDereferenced, Byte* IsImplicitlyDereferenced, Byte* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
